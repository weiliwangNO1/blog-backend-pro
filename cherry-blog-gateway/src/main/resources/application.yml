#server:
#  port: 6001
#
#spring:
#  application:
#    name: gateway-server # 应用名
#    redis:
#      host: localhost # Redis服务器地址
#      port: 6379 # Redis服务器连接端口
#      # Redis服务器连接密码（默认为空），注释放到上面来，不然控制台可能会一直打印日志
#      password:
#  cloud:
#    nacos:
#      discovery:
#        server-addr: 127.0.0.1:8848 # 注册中心地址
#    gateway:
#      #      discovery:
#      #        locator:
#      #          # true 开启使用服务名称调用目标服务
#      #          enabled: true
#      # 路由（routes：路由，它由唯一标识（ID）、目标服务地址（uri）
#      # 、一组断言（predicates）和一组过滤器组成（filters）。filters 不是必需参数。）
#      routes: # List类型
#        # id：路由标识，具有唯一性
#        - id: blog-article
#          # 目标服务地址（uri：地址，请求转发后的地址
#          #uri: http://localhost:8001
#          uri: lb://article-server
#          # 目标服务地址 lb://目标服务名，会自动从注册中心获取此服务的ip和端口转发到 article-server 服务处理
#          #          uri: lb://article-service
#          # 路由条件（predicates：断言，匹配 HTTP 请求内容）
#          predicates:
#            # 匹配访问路径，格式为 uri/article/**
#            - Path=/article/**
#          filters:
#            #代理转发时去掉路径位数,发送请求 uri/str/article，/str 部分会被下面的过滤器给截取掉
#            #- StripPrefix=1
#            - name: RequestRateLimiter
#              args:
#                #限流过滤器的bean名称
#                key-resolver: "#{@uriKeyResolver}"
#                #希望允许用户每秒执行多少个请求，令牌桶的填充速率
#                redis-rate-limiter.replenishRate: 2
#                #允许用户在一秒内完成的最大请求数，令牌桶的最大容量
#                redis-rate-limiter.burstCapacity: 6
#
#        - id: blog-question # 问答微服务
#          #目标服务地址 lb://目标服务名，会自动从注册中心获取此服务的ip和端口转发到 question-server 服务处理
#          uri: lb://question-server
#          predicates:
#            - Path=/question/**
#          filters:
#            #代理转发时去掉路径位数,发送请求 uri/str/article，/str 部分会被下面的过滤器给截取掉
#            #- StripPrefix=1
#            - name: RequestRateLimiter
#              args:
#                #限流过滤器的bean名称
#                key-resolver: "#{@uriKeyResolver}"
#                #希望允许用户每秒执行多少个请求，令牌桶的填充速率
#                redis-rate-limiter.replenishRate: 2
#                #允许用户在一秒内完成的最大请求数，令牌桶的最大容量
#                redis-rate-limiter.burstCapacity: 6
#
#        - id: blog-system # 系统微服务
#          uri: lb://system-server
#          predicates:
#            - Path=/system/**
#          filters:
#            #代理转发时去掉路径位数,发送请求 uri/str/article，/str 部分会被下面的过滤器给截取掉
#            #- StripPrefix=1
#            - name: RequestRateLimiter
#              args:
#                #限流过滤器的bean名称
#                key-resolver: "#{@uriKeyResolver}"
#                #希望允许用户每秒执行多少个请求，令牌桶的填充速率
#                redis-rate-limiter.replenishRate: 2
#                #允许用户在一秒内完成的最大请求数，令牌桶的最大容量
#                redis-rate-limiter.burstCapacity: 6
#
#        - id: blog-auth # 认证服务器
#          uri: lb://auth-server
#          predicates:
#            - Path=/auth/**
#          filters:
#            #代理转发时去掉路径位数,发送请求 uri/str/article，/str 部分会被下面的过滤器给截取掉
#            #- StripPrefix=1
#            - name: RequestRateLimiter
#              args:
#                #限流过滤器的bean名称
#                key-resolver: "#{@uriKeyResolver}"
#                #希望允许用户每秒执行多少个请求，令牌桶的填充速率
#                redis-rate-limiter.replenishRate: 2
#                #允许用户在一秒内完成的最大请求数，令牌桶的最大容量
#                redis-rate-limiter.burstCapacity: 6